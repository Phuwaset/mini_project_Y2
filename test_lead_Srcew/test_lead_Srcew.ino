// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏≤ Digital ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Stepper Motor Driver (TB6600)
#define DIR_PIN 25  // ‡∏Ç‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏∏‡∏ô (Direction) - ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≤ 25
#define STEP_PIN 24 // ‡∏Ç‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì Step (Pulse) - ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≤ 24

// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏≤ Digital ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Limit Switch ‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏ß
// IMPORTANT: ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ï‡πà‡∏≠‡πÅ‡∏ö‡∏ö Pull-down, ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏ß‡∏¥‡∏ï‡∏ä‡πå‡∏ñ‡∏π‡∏Å‡∏Å‡∏î ‡∏Ñ‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô HIGH
// ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏ß‡∏¥‡∏ï‡∏ä‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏Å‡∏î ‡∏Ñ‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô LOW
#define LIMIT_SWITCH_MIN 23 // ‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡∏™‡∏ß‡∏¥‡∏ï‡∏ä‡πå‡∏ï‡πâ‡∏ô‡∏ó‡∏≤‡∏á (Home Position)
#define LIMIT_SWITCH_MAX 22 // ‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡∏™‡∏ß‡∏¥‡∏ï‡∏ä‡πå‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á

// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Stepper Motor
#define STEPS_PER_REV 200     // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Step ‡∏ï‡πà‡∏≠‡∏£‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á Stepper Motor (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå 1.8 ‡∏≠‡∏á‡∏®‡∏≤/step)
#define MICROSTEPPING 1       // ‡∏Ñ‡πà‡∏≤ Microstepping ‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ‡∏ö‡∏ô Driver TB6600 (‡πÄ‡∏ä‡πà‡∏ô 1, 2, 4, 8, 16)
                              // ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ö‡∏ô Driver ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≠‡∏ö‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á

void setup() {
  // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Serial Communication ‡∏ó‡∏µ‡πà Baud Rate 9600
  // ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Debugging ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ï‡πà‡∏≤‡∏á‡πÜ
  Serial.begin(9600);
  Serial.println("Limit Switch and Stepper Motor Test - Initializing...");

  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏Ç‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Limit Switch ‡πÄ‡∏õ‡πá‡∏ô INPUT
  // ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ï‡πà‡∏≠‡πÅ‡∏ö‡∏ö Pull-down ‡∏à‡∏∂‡∏á‡πÉ‡∏ä‡πâ INPUT ‡∏õ‡∏Å‡∏ï‡∏¥ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ INPUT_PULLUP
  pinMode(LIMIT_SWITCH_MIN, INPUT);
  pinMode(LIMIT_SWITCH_MAX, INPUT);

  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏Ç‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Direction ‡πÅ‡∏•‡∏∞ Step ‡πÄ‡∏õ‡πá‡∏ô OUTPUT
  pinMode(STEP_PIN, OUTPUT); // PUL+ (‡∏Ç‡∏≤ 24)
  pinMode(DIR_PIN, OUTPUT);  // DIR+ (‡∏Ç‡∏≤ 25)

  // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Homing ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Stepper Motor ‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
  homing();

  Serial.println("Limit Switch and Stepper Motor Test - Ready!");
}

void loop() {
  // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏à‡∏≤‡∏Å Limit Switch
  // ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ï‡πà‡∏≠‡πÅ‡∏ö‡∏ö Pull-down: HIGH = ‡∏Å‡∏î/‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö, LOW = ‡πÑ‡∏°‡πà‡∏Å‡∏î/‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö
  int minStatus = digitalRead(LIMIT_SWITCH_MIN);
  int maxStatus = digitalRead(LIMIT_SWITCH_MAX);

  // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á Limit Switch ‡∏ö‡∏ô Serial Monitor ‡πÄ‡∏û‡∏∑‡πà‡∏≠ Debugging
  Serial.print("Limit Switch MIN (Home): ");
  Serial.print(minStatus == HIGH ? "PRESSED" : "RELEASED");
  Serial.print(" | Limit Switch MAX (End): ");
  Serial.println(maxStatus == HIGH ? "PRESSED" : "RELEASED");

  // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Stepper Motor ‡πÅ‡∏•‡∏∞ Limit Switch ‡πÉ‡∏ô loop
  // ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏° Logic ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Stepper Motor ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
  // ‡πÄ‡∏ä‡πà‡∏ô ‡∏´‡∏°‡∏∏‡∏ô‡πÑ‡∏õ‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏ô‡πÄ‡∏à‡∏≠ LIMIT_SWITCH_MAX ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏°‡∏∏‡∏ô‡∏Å‡∏•‡∏±‡∏ö
  if (digitalRead(LIMIT_SWITCH_MAX) == LOW) { // ‡∏ñ‡πâ‡∏≤ LIMIT_SWITCH_MAX ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏Å‡∏î (‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á)
    Serial.println("Moving forward...");
    rotateMotor(LOW, 1); // ‡∏´‡∏°‡∏∏‡∏ô‡πÑ‡∏õ 1 ‡∏£‡∏≠‡∏ö (‡∏õ‡∏£‡∏±‡∏ö‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö‡πÑ‡∏î‡πâ)
  } else {
    Serial.println("LIMIT_SWITCH_MAX PRESSED! Stopping and Homing...");
    homing(); // ‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á Home
    delay(2000); // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠
  }

  delay(500); // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ Serial Monitor ‡∏£‡∏±‡∏ô‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏°‡∏∏‡∏ô Stepper Motor
// ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ direction (HIGH/LOW) ‡πÅ‡∏•‡∏∞ rounds (‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö)
void rotateMotor(bool direction, int rounds) {
  digitalWrite(DIR_PIN, direction); // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏∏‡∏ô

  long totalSteps = (long)STEPS_PER_REV * MICROSTEPPING * rounds;

  for (long i = 0; i < totalSteps; i++) {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Limit Switch MAX ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏∏‡∏ô
    // ‡∏´‡∏≤‡∏Å Limit Switch MAX ‡∏ñ‡∏π‡∏Å‡∏Å‡∏î (HIGH) ‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏∏‡∏î‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå
    if (digitalRead(LIMIT_SWITCH_MAX) == HIGH) {
      Serial.println("üö® LIMIT REACHED: MAX POSITION! Stopping motor.");
      return; // ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    }
    digitalWrite(STEP_PIN, HIGH);
    delayMicroseconds(500); // ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏∏‡∏ô (‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡πÑ‡∏î‡πâ)
    digitalWrite(STEP_PIN, LOW);
    delayMicroseconds(500); // ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏∏‡∏ô (‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡πÑ‡∏î‡πâ)
  }
  Serial.print("Rotated ");
  Serial.print(rounds);
  Serial.println(" rounds.");
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Homing (‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô) ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ LIMIT_SWITCH_MIN
void homing() {
  Serial.println("Homing...");
  digitalWrite(DIR_PIN, HIGH); // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡πÉ‡∏´‡πâ‡∏´‡∏°‡∏∏‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏≤ LIMIT_SWITCH_MIN (‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì)
  delay(100); // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Direction ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô

  // ‡∏´‡∏°‡∏∏‡∏ô‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏õ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏¢‡πÜ ‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤ LIMIT_SWITCH_MIN ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏Å‡∏î (HIGH)
  while (digitalRead(LIMIT_SWITCH_MIN) == LOW) { // ‡∏ï‡∏£‡∏≤‡∏ö‡πÉ‡∏î‡∏ó‡∏µ‡πà LIMIT_SWITCH_MIN ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏Å‡∏î
    digitalWrite(STEP_PIN, HIGH);
    delayMicroseconds(500); // ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏∏‡∏ô homing
    digitalWrite(STEP_PIN, LOW);
    delayMicroseconds(500);
  }

  Serial.println("‚úÖ Home Position Reached! (LIMIT_SWITCH_MIN PRESSED)");

  // ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏à‡∏≠ Limit Switch MIN ‡πÅ‡∏•‡πâ‡∏ß ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏´‡∏°‡∏∏‡∏ô‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏™‡∏ß‡∏¥‡∏ï‡∏ä‡πå
  // ‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏°‡∏∏‡∏ô‡πÑ‡∏õ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÑ‡∏ß‡πâ
  Serial.println("üîÑ Moving away from Home Switch by 1 round...");
  digitalWrite(DIR_PIN, LOW); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á (‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì)
  delay(100);
  rotateMotor(LOW, 1); // ‡∏´‡∏°‡∏∏‡∏ô‡∏Å‡∏•‡∏±‡∏ö 1 ‡∏£‡∏≠‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏™‡∏ß‡∏¥‡∏ï‡∏ä‡πå

  Serial.println("‚úÖ Ready to Start!");
}
